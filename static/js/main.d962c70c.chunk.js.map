{"version":3,"sources":["Components/ImageGallery/ImageGallery.module.css","Components/Button/Button.module.css","Components/Modal/Modal.module.css","Components/Searchbar/Searchbar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/Button/Button.js","Components/Modal/Modal.js","services/imgAPI.js","Components/ImageGallery/ImageGallery.js","Components/Loader/Loader.js","App.js","index.js","Components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","sarch","className","s","onSubmit","this","props","SearchForm","type","name","value","search","SearchForm_input","autoComplete","autoFocus","placeholder","SearchForm_button","Component","ImageGalleryItem","id","webformatURL","tags","largeImageURL","src","alt","ImageGalleryItem_image","Button","onClick","modalPortal","document","querySelector","Modal","ref","React","createRef","current","addEventListener","closeModal","window","removeEventListener","createPortal","Overlay","url","api","fetchImg","page","fetch","then","response","json","ImageGallery","modalUrl","modalIsOpen","error","fetchImagesByName","errorMessage","data","hits","length","Promise","reject","Error","setState","prevState","catch","alert","message","finally","hideLoader","scroll","scrollTo","top","documentElement","scrollHeight","behavior","increasePage","openModal","evt","target","nodeName","dataset","big_image","code","list","prevProps","map","item","Loaders","color","height","width","App","loaderAreShown","handleSubmit","inputValue","preventDefault","trim","showLoader","searchCheck","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d962c70c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3OYic\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__V6QLn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2ix_z\",\"Modal\":\"Modal_Modal__20bIs\"};","import React, { Component } from 'react';\r\nimport s from './Searchbar.module.css';\r\nimport PropTypes from 'prop-types';\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    sarch: '',\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <header className={s.Searchbar}>\r\n          <form\r\n            onSubmit={this.props.onSubmit}\r\n            className={s.SearchForm}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              name=\"picName\"\r\n              value={this.state.search}\r\n              className={s.SearchForm_input}\r\n              autoComplete=\"off\"\r\n              autoFocus\r\n              placeholder=\"Search images and photos\"\r\n            ></input>\r\n            <button\r\n              type=\"submit\"\r\n              className={s.SearchForm_button}\r\n            ></button>\r\n          </form>\r\n        </header>\r\n      </>\r\n    );\r\n  }\r\n}\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem';\r\n\r\nexport default class ImageGalleryItem extends Component {\r\n  render() {\r\n    const { id, webformatURL, tags, largeImageURL } =\r\n      this.props;\r\n    return (\r\n      <li key={id} className={s.ImageGalleryItem}>\r\n        <a>\r\n          <img\r\n            src={webformatURL}\r\n            alt={tags}\r\n            data-big_image={largeImageURL}\r\n            className={s.ImageGalleryItem_image}\r\n          />\r\n        </a>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  search: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  webformatURL: PropTypes.string,\r\n  tags: PropTypes.string,\r\n  largeImageURL: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\nexport default function Button({ onClick }) {\r\n  return (\r\n    <>\r\n      <button\r\n        type=\"button\"\r\n        className={s.Button}\r\n        onClick={onClick}\r\n      >\r\n        Load more\r\n      </button>\r\n    </>\r\n  );\r\n}\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Modal.module.css';\r\nconst modalPortal = document.querySelector('#modal-root');\r\nexport default class Modal extends Component {\r\n  ref = React.createRef();\r\n  componentDidMount() {\r\n    this.ref.current.addEventListener(\r\n      'click',\r\n      this.props.closeModal,\r\n    );\r\n    window.addEventListener(\r\n      'keydown',\r\n      this.props.closeModal,\r\n    );\r\n  }\r\n  componentWillUnmount() {\r\n    this.ref.current.removeEventListener(\r\n      'click',\r\n      this.props.closeModal,\r\n    );\r\n    window.removeEventListener(\r\n      'keydown',\r\n      this.props.closeModal,\r\n    );\r\n  }\r\n  render() {\r\n    return createPortal(\r\n      <div ref={this.ref} className={s.Overlay}>\r\n        <img src={this.props.url} alt=\"\" />\r\n      </div>,\r\n      modalPortal,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  closeModal: PropTypes.func.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n};\r\n","function fetchImg(search, page) {\r\n  const API_KEY = '21885958-186cb9f8de90f78c5ca194f62';\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${search}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  ).then(response => {\r\n    return response.json();\r\n  });\r\n}\r\nconst api = { fetchImg };\r\nexport default api;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport s from './ImageGallery.module.css';\r\nimport Button from '../Button/Button';\r\nimport Modal from '../Modal/Modal';\r\nimport api from '../../services/imgAPI';\r\nexport default class ImageGallery extends Component {\r\n  state = {\r\n    page: 1,\r\n    modalUrl: '',\r\n    modalIsOpen: false,\r\n    response: [],\r\n    error: null,\r\n  };\r\n  componentDidMount() {\r\n    const list = document.querySelector('ul');\r\n    const { openModal } = this.props;\r\n    this.fetchImagesByName();\r\n    list.addEventListener('click', openModal);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { search, scroll } = this.props;\r\n    const { page } = this.state;\r\n    if (prevProps.search !== search) {\r\n      this.setState({\r\n        response: [],\r\n      });\r\n      this.fetchImagesByName();\r\n    }\r\n    if (prevState.page !== page) {\r\n      this.fetchImagesByName().then(scroll);\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    const list = document.querySelector('ul');\r\n    const { openModal } = this.props;\r\n    list.removeEventListener('click', openModal);\r\n  }\r\n  fetchImagesByName = () => {\r\n    const API_KEY = '21885958-186cb9f8de90f78c5ca194f62';\r\n    const { search, page } = this.props;\r\n    const errorMessage = `Изображений по ключевому слову ${search} не найдено`;\r\n    return api\r\n      .fetchImg(search, page)\r\n      .then(data => {\r\n        if (data.hits.length === 0) {\r\n          return Promise.reject(new Error(errorMessage));\r\n        }\r\n        return this.setState(prevState => ({\r\n          response: [...prevState.response, ...data.hits],\r\n        }));\r\n      })\r\n      .catch(error => alert(error.message))\r\n      .finally(() => {\r\n        this.props.hideLoader();\r\n      });\r\n  };\r\n  scroll = () => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n  increasePage = () => {\r\n    this.setState(prevState => ({\r\n      page: prevState.page + 1,\r\n    }));\r\n  };\r\n  openModal = evt => {\r\n    if (evt.target.nodeName === 'IMG') {\r\n      this.setState({\r\n        modalIsOpen: true,\r\n        modalUrl: evt.target.dataset.big_image,\r\n      });\r\n    }\r\n  };\r\n\r\n  closeModal = evt => {\r\n    if (\r\n      evt.target.nodeName === 'DIV' ||\r\n      evt.code === 'Escape'\r\n    ) {\r\n      this.setState({\r\n        modalIsOpen: false,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { modalIsOpen, modalUrl, page } = this.state;\r\n    const { search, hideLoader } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          <ul className={s.ImageGallery}>\r\n            {this.state.response.map(item => {\r\n              const {\r\n                id,\r\n                webformatURL,\r\n                tags,\r\n                largeImageURL,\r\n              } = item;\r\n              return (\r\n                <ImageGalleryItem\r\n                  id={id}\r\n                  webformatURL={webformatURL}\r\n                  tags={tags}\r\n                  largeImageURL={largeImageURL}\r\n                  openModal={this.openModal}\r\n                  hideLoader={hideLoader}\r\n                  search={search}\r\n                  page={page}\r\n                  scroll={this.scroll}\r\n                />\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n        <Button onClick={this.increasePage} />\r\n        {modalIsOpen && (\r\n          <Modal\r\n            url={modalUrl}\r\n            closeModal={this.closeModal}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\nImageGallery.propTypes = {\r\n  hideLoader: PropTypes.func.isRequired,\r\n  openModal: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  hideLoader: PropTypes.func.isRequired,\r\n  search: PropTypes.string.isRequired,\r\n};\r\n","import Loader from 'react-loader-spinner';\r\n\r\nexport default function Loaders() {\r\n  return (\r\n    <div>\r\n      <Loader\r\n        type=\"ThreeDots\"\r\n        color=\"#18166b\"\r\n        height={80}\r\n        width={80}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import './App.css';\nimport React, { Component } from 'react';\nimport Searchbar from './Components/Searchbar/Searchbar';\nimport ImageGallery from './Components/ImageGallery/ImageGallery';\nimport Loaders from './Components/Loader/Loader';\nexport default class App extends Component {\n  state = {\n    search: '',\n    loaderAreShown: false,\n  };\n\n  handleSubmit = evt => {\n    const inputValue = evt.target[0].value;\n    this.setState(prevState => ({\n      loaderAreShown: true,\n    }));\n\n    evt.preventDefault();\n\n    if (inputValue.trim() === '') {\n      alert('Введите ключевое слово для поиска картинок');\n      return;\n    }\n\n    this.setState({ search: inputValue });\n    evt.target[0].value = '';\n  };\n  showLoader = () => {\n    this.setState(prevState => ({\n      loaderAreShown: true,\n    }));\n  };\n  hideLoader = () => {\n    this.setState(prevState => ({\n      loaderAreShown: false,\n    }));\n  };\n  render() {\n    const { search, loaderAreShown } = this.state;\n    const searchCheck = this.state.search === '';\n    return (\n      <>\n        <div>\n          <Searchbar\n            onSubmit={this.handleSubmit}\n          />\n          {loaderAreShown && <Loaders />}\n          {!searchCheck && (\n            <ImageGallery\n              search={search}\n              hideLoader={this.hideLoader}\n            />\n          )}\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3PG1u\",\"SearchForm\":\"Searchbar_SearchForm__12b27\",\"SearchForm_button\":\"Searchbar_SearchForm_button__3Ku1i\",\"SearchForm_button-label\":\"Searchbar_SearchForm_button-label__2yKRu\",\"SearchForm_input\":\"Searchbar_SearchForm_input__1sNy6\"};"],"sourceRoot":""}